<Activity mc:Ignorable="sap sap2010 sads" x:Class="MmapManager.Console.Activity.ProcessStep"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:local="clr-namespace:MmapManager.Console.Activity"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="stepId" Type="InArgument(x:String)" />
    <x:Property Name="stepDescription" Type="InArgument(x:String)" />
    <x:Property Name="stepInstructions" Type="InArgument(x:String)" />
  </x:Members>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap2010:WorkflowViewState.IdRef>MmapManager.Console.Activity.ProcessStep_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>MmapManager.Console</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ProcessStep" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="_stepId" />
      <Variable x:TypeArguments="x:String" Name="_stepDescription" />
      <Variable x:TypeArguments="x:String" Name="_stepInstructions" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="_isExecuteStep" />
      <Variable x:TypeArguments="x:String" Name="_isExecuteStepAnswer" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="_isStepComplete" />
      <Variable x:TypeArguments="x:String" Name="_isStepCompleteAnswer" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="_doesPowershellAutomationExist" />
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="_doesDotNetAutomationExist" />
    </Sequence.Variables>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">_stepId</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">stepId</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">_stepDescription</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">stepDescription</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">_stepInstructions</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">stepInstructions</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_2">
      <InArgument x:TypeArguments="x:String">
        <mca:CSharpValue x:TypeArguments="x:String">String.Format("\r\n\r\n-----------------\r\nStep id: {0}", stepId)</mca:CSharpValue>
      </InArgument>
    </WriteLine>
    <local:FileExists AutomationExtension="ps1" sap2010:WorkflowViewState.IdRef="FileExists_1">
      <local:FileExists.AutomationFileExists>
        <OutArgument x:TypeArguments="x:Boolean">
          <mca:CSharpReference x:TypeArguments="x:Boolean">_doesPowershellAutomationExist</mca:CSharpReference>
        </OutArgument>
      </local:FileExists.AutomationFileExists>
      <local:FileExists.StepId>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">_stepId</mca:CSharpValue>
        </InArgument>
      </local:FileExists.StepId>
    </local:FileExists>
    <If sap2010:WorkflowViewState.IdRef="If_3">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <mca:CSharpValue x:TypeArguments="x:Boolean">_doesPowershellAutomationExist</mca:CSharpValue>
        </InArgument>
      </If.Condition>
      <If.Then>
        <While sap2010:WorkflowViewState.IdRef="While_2">
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">!_isStepComplete</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
            <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_9">
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">String.Format("\r\n---Step description:\r\n{0}\r\n\r\nExecute step? (y/n)", stepDescription)</mca:CSharpValue>
              </InArgument>
            </WriteLine>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">_isExecuteStepAnswer</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">Console.ReadKey().Key.ToString()</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpReference x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStepAnswer == "Y"</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <If sap2010:WorkflowViewState.IdRef="If_4">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="PowershellAutomation" sap2010:WorkflowViewState.IdRef="Sequence_6">
                  <local:ExecutePowershellScript sap2010:WorkflowViewState.IdRef="ExecutePowershellScript_1">
                    <local:ExecutePowershellScript.ScriptPath>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">String.Format("{0}.ps1", _stepId)</mca:CSharpValue>
                      </InArgument>
                    </local:ExecutePowershellScript.ScriptPath>
                  </local:ExecutePowershellScript>
                  <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_11">
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">"\r\n\r\nPowershell automation step complete"</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">_isStepComplete</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </If.Then>
            </If>
          </Sequence>
        </While>
      </If.Then>
      <If.Else>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
          <local:FileExists AutomationExtension="dll" sap2010:WorkflowViewState.IdRef="FileExists_2">
            <local:FileExists.AutomationFileExists>
              <OutArgument x:TypeArguments="x:Boolean">
                <mca:CSharpReference x:TypeArguments="x:Boolean">_doesDotNetAutomationExist</mca:CSharpReference>
              </OutArgument>
            </local:FileExists.AutomationFileExists>
            <local:FileExists.StepId>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">_stepId</mca:CSharpValue>
              </InArgument>
            </local:FileExists.StepId>
          </local:FileExists>
          <If sap2010:WorkflowViewState.IdRef="If_2">
            <If.Condition>
              <InArgument x:TypeArguments="x:Boolean">
                <mca:CSharpValue x:TypeArguments="x:Boolean">_doesDotNetAutomationExist</mca:CSharpValue>
              </InArgument>
            </If.Condition>
            <If.Then>
              <While sap2010:WorkflowViewState.IdRef="While_3">
                <While.Condition>
                  <mca:CSharpValue x:TypeArguments="x:Boolean">!_isStepComplete</mca:CSharpValue>
                </While.Condition>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_8">
                  <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_12">
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">String.Format("\r\n---Step description:\r\n{0}\r\n\r\nExecute step? (y/n)", stepDescription)</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">_isExecuteStepAnswer</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">Console.ReadKey().Key.ToString()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_12">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStepAnswer == "Y"</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap2010:WorkflowViewState.IdRef="If_5">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="DotNetAutomation" sap2010:WorkflowViewState.IdRef="Sequence_7">
                        <local:ExecuteAssembly sap2010:WorkflowViewState.IdRef="ExecuteAssembly_1">
                          <local:ExecuteAssembly.AssemblyName>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">String.Format("{0}.dll", _stepId)</mca:CSharpValue>
                            </InArgument>
                          </local:ExecuteAssembly.AssemblyName>
                        </local:ExecuteAssembly>
                        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_14">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">"\r\n\r\nDotNet automation step complete"</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean">_isStepComplete</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </While>
            </If.Then>
            <If.Else>
              <While sap2010:WorkflowViewState.IdRef="While_1">
                <While.Condition>
                  <mca:CSharpValue x:TypeArguments="x:Boolean">!_isStepComplete</mca:CSharpValue>
                </While.Condition>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_3">
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">String.Format("\r\n---Step description:\r\n{0}\r\n\r\nExecute step? (y/n)", stepDescription)</mca:CSharpValue>
                    </InArgument>
                  </WriteLine>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">
                        <mca:CSharpReference x:TypeArguments="x:String">_isExecuteStepAnswer</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">Console.ReadKey().Key.ToString()</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpReference x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStepAnswer == "Y"</mca:CSharpValue>
                      </InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap2010:WorkflowViewState.IdRef="If_1">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <mca:CSharpValue x:TypeArguments="x:Boolean">_isExecuteStep</mca:CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <If.Then>
                      <Sequence DisplayName="Manual" sap2010:WorkflowViewState.IdRef="Sequence_3">
                        <WriteLine sap2010:WorkflowViewState.IdRef="WriteLine_4">
                          <InArgument x:TypeArguments="x:String">
                            <mca:CSharpValue x:TypeArguments="x:String">String.Format("\r\n\r\n---Step instructions:\r\n{0}\r\n\r\nIs step complete? (y/n)", stepInstructions)</mca:CSharpValue>
                          </InArgument>
                        </WriteLine>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">
                              <mca:CSharpReference x:TypeArguments="x:String">_isStepCompleteAnswer</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">
                              <mca:CSharpValue x:TypeArguments="x:String">Console.ReadKey().Key.ToString()</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_6">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpReference x:TypeArguments="x:Boolean">_isStepComplete</mca:CSharpReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Boolean">
                              <mca:CSharpValue x:TypeArguments="x:Boolean">_isStepCompleteAnswer == "Y"</mca:CSharpValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </If.Then>
                  </If>
                </Sequence>
              </While>
            </If.Else>
          </If>
        </Sequence>
      </If.Else>
    </If>
    <sads:DebugSymbol.Symbol>d1xDOlxkZXZcZGV2ZWxvcG1lbnRcU2FuZGJveFxNbWFwTWFuXE1tYXBNYW5hZ2VyXE1tYXBNYW5hZ2VyLkNvbnNvbGVcQWN0aXZpdHlcUHJvY2Vzc1N0ZXAueGFtbF0uA+oCDgIBATM1MzwCAQU1NTU8AgEENzU3PAIBAzg1ODwCAQI6BUUOAwHfBEYFUQ4DAcQEUgVdDgMBqQReBWIRAwGbBGMFbhgDAf8DbwXoAgoCAQZCC0JPAwHtBD0LPVgDAeAETgtOWAMB0gRJC0lhAwHFBFoLWlkDAbcEVQtVYgMBqgRgCWCJAQMBnARjK2MwAwGaBGYLZnADAY0EawtrUAMBgARyC3JoAgEHdgm6AREDAfICvQEJ5gIUAgEUegu5ARYDAYADeA14XAMB8wK+AQvJAR4DAdYCygEL5QIQAgEVew1/GQMB8QOAAQ2LARYDAdYDjAENlwEWAwG7A5gBDbgBEgMBgQO+ATG+ATYDAfECwQERwQFyAwHkAsYBEcYBVgMB1wLNARHNAWoCARbRAQ+VAhcDAckBmAIP4wIXAgEjfRF9qwEDAfIDiAETiAFxAwHkA4MBE4MBbQMB1wOUAROUAW0DAckDjwETjwFoAwG8A5sBE5sBYAMBggOfARG2ARwDAY8D1QERlAIcAwHXAdMBE9MBYgMBygGcAhHiAhwCATGaAhOaAmICASSgAROmATMDAa0DpwETqwEfAwGfA6wBE7UBHAMBkAPWARPaAR8DAcgC2wET5gEcAwGtAucBE/IBHAMBkgLzAROTAhgDAdgBnQIToQIfAwG7AaICE60CHAMBoAGuAhO5AhwDAYUBugIT4QIYAgEyowEZowF4AwGuA6kBF6kBggEDAaADswE/swFDAwGeA68BGa8BbwMBkQPYARfYAbEBAwHJAuMBGeMBdwMBuwLeARneAXMDAa4C7wEZ7wFzAwGgAuoBGeoBbgMBkwL2ARn2AWYDAdkB+gEXkQIiAwHmAZ8CF58CsQEDAbwBqgIZqgJ3AwGuAaUCGaUCcwMBoQG2Ahm2AnMDAZMBsQIZsQJuAwGGAb0CGb0CZgIBM8ECF98CIgIBQPsBGYECMQMBhAKCAhmGAiUDAfYBhwIZkAIiAwHnAcICGcYCJQIBd8cCGdICIgIBXNMCGd4CIgIBQf4BH/4BfgMBhQKEAh2EAoQBAwH3AY4CRY4CSQMB9QGKAh+KAnUDAegBxAIdxALBAQIBeM8CH88CfQIBasoCH8oCegIBXdsCH9sCegIBT9YCH9YCdQIBQg==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="1608,62" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="1608,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="1608,62" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="1608,62" />
      <sap2010:ViewStateData Id="FileExists_1" sap:VirtualizedContainerService.HintSize="1608,22" />
      <sap2010:ViewStateData Id="WriteLine_9" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="ExecutePowershellScript_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="464,500" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="486,930">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="512,1090" />
      <sap2010:ViewStateData Id="FileExists_2" sap:VirtualizedContainerService.HintSize="1049,22" />
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="ExecuteAssembly_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="264,350">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,500" />
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="486,930">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="512,1090" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="264,390">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,540" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="486,970">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="512,1130" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="1049,1280" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="1071,1466">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="1608,1616" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="1630,2210">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MmapManager.Console.Activity.ProcessStep_1" sap:VirtualizedContainerService.HintSize="1670,2290" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>